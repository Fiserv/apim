openapi: 3.0.3
info:
  title: FTS-APIM-Product-Management-Mock-V1 - OpenAPI 3.0
  description: This document provides information on product Management
  contact:
    name: FTS APIM Support
    email: DL-NA-APIM@fiserv.com
  version: 1.0.0
servers:
  - url: https://connect-uat.fiservapis.com/fts/apim/product-management/mock/v1
    description: UAT server for test purposes
tags:
  - name: Product
    description: API endpoints related to Product-Management
paths:
  /apiproducts:
    post:
      tags:
        - Product
      x-proxy-name: Create Product
      x-group-name: Product  
      summary: Creates a Products
      description: Creates a Products.
      operationId: Creates a Products
      requestBody:
        description: Subscription details.
        content:
             application/json:
              schema:
                $ref: '#/components/schemas/APIProductRequest'
              example:
                name: FTS-product-test
                displayName: FTS-product-test
                approvalType: auto
                attributes:
                  - name: access
                    value: public
                description: APM0000071 - dsfsf
                environments:
                  - dev
                quota: '4'
                quotaInterval: '6'
                quotaTimeUnit: hour
                createdAt: '1718136597439'
                lastModifiedAt: '1718136597439'
                operationGroup:
                  operationConfigs:
                    - apiSource: FTS-proxy-test1
                      operations:
                        - resource: /
                      quota: {}
                    - apiSource: FTS-proxy-test2
                      operations:
                        - resource: /
                      quota: {}
                  operationConfigType: proxy
                
      responses:
        '201':
          description: Successful Operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIProductResponse'
              example:
                name: FTS-product-test
                displayName: FTS-product-test
                approvalType: auto
                attributes:
                  - name: access
                    value: public
                description: APM0000071 - dsfsf
                environments:
                  - dev
                quota: '4'
                quotaInterval: '6'
                quotaTimeUnit: hour
                createdAt: '1718136597439'
                lastModifiedAt: '1718136597439'
                operationGroup:
                  operationConfigs:
                    - apiSource: FTS-proxy-test1
                      operations:
                        - resource: /
                      quota: {}
                    - apiSource: FTS-proxy-test2
                      operations:
                        - resource: /
                      quota: {}
                  operationConfigType: proxy
                
                
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/400'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401'
        '403':
           description: Permission denied on resource
           content:
            application/json:
              schema:
                $ref: '#/components/schemas/403'
         
         
        '404':
          description: Resource Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/404'
        '409':
          description: Conflict
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/409' 
    get:
      tags:
        - Product
      x-proxy-name: List Products
      x-group-name: Product   
      summary: Lists all API products
      description: Lists all products
      operationId: Lists all products 
      responses:
        '200':
          description: Successful Operation
          content:
            application/json:
              schema:
                  $ref: '#/components/schemas/ApiProductList'
              example:
                apiProduct:
                  - name: FTS-product-Test
                    displayName: FTS-product-Test-00
                    approvalType: auto
                    attributes:
                      - name: access
                        value: public
                    description: APM0000071 - dsfsf
                    environments:
                      - dev
                    quota: '4'
                    quotaInterval: '6'
                    quotaTimeUnit: hour
                    createdAt: '1718651266820'
                    lastModifiedAt: '1718651266820'
                    operationGroup:
                      operationConfigs:
                        - apiSource: Test-Demo-Proxy-NC-V1
                          operations:
                            - resource: /
                          quota: {}
                        - apiSource: FTS-APIM-OA-Demo-Proxy-NC-V1
                          operations:
                            - resource: /
                          quota: {}
                      operationConfigType: proxy
                  - name: FTS-product-Test-00
                    displayName: FTS-product-Test-00
                    approvalType: auto
                    attributes:
                      - name: access
                        value: public
                    description: APM0000071 - dsfsf
                    environments:
                      - dev
                    quota: '4'
                    quotaInterval: '6'
                    quotaTimeUnit: hour
                    createdAt: '1718149250766'
                    lastModifiedAt: '1718149250766'
                    operationGroup:
                      operationConfigs:
                        - apiSource: Demo-Proxy-NC-V1
                          operations:
                            - resource: /
                          quota: {}
                        - apiSource: Demo-Proxy-NC-V1
                          operations:
                            - resource: /
                          quota: {}
                      operationConfigType: proxy
                
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/400'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401'
        '403':
           description: Permission denied on resource
           content:
            application/json:
              schema:
                $ref: '#/components/schemas/403'
         
         
        '404':
          description: Resource Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/404'
        '409':
          description: Conflict
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/409' 
  /apiproducts/{apiproduct-id}:
    get:
      tags:
        - Product
      x-proxy-name: Retrieve Product
      x-group-name: Product   
      summary: Returns the product details
      description: Returns the product details
      operationId: Returns the product details 
      parameters:
        - name: apiproduct-id
          in: path
          required: true
          schema:
            $ref: '#/components/parameters/apiproductId'
      responses:
        '200':
          description: Successful Operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIProductResponse'
              example:
                name: FTS-product-test
                displayName: FTS-product-test
                approvalType: auto
                attributes:
                  - name: access
                    value: public
                description: APM0000071 - dsfsf
                environments:
                  - dev
                quota: '4'
                quotaInterval: '6'
                quotaTimeUnit: hour
                createdAt: '1718136597439'
                lastModifiedAt: '1718136597439'
                operationGroup:
                  operationConfigs:
                    - apiSource: FTS-proxy-test1
                      operations:
                        - resource: /
                      quota: {}
                    - apiSource: FTS-proxy-test2
                      operations:
                        - resource: /
                      quota: {}
                  operationConfigType: proxy
                
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/400'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401'
        '403':
           description: Permission denied on resource
           content:
            application/json:
              schema:
                $ref: '#/components/schemas/403'
         
         
        '404':
          description: Resource Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/404'
        '409':
          description: Conflict
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/409' 
    put:
      tags:
        - Product
      x-proxy-name: Update Product
      x-group-name: Product    
      summary: Updates a Product
      description: Updates a Product
      operationId: Updates a Product 
      requestBody:
        description: Subscription details.
        content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIProductRequest'
              example:
                name: FTS-product-test
                displayName: FTS-product-test
                approvalType: auto
                attributes:
                  - name: access
                    value: public
                description: APM0000071 - dsfsf
                environments:
                  - dev
                quota: '4'
                quotaInterval: '6'
                quotaTimeUnit: hour
                createdAt: '1718136597439'
                lastModifiedAt: '1718136597439'
                operationGroup:
                  operationConfigs:
                    - apiSource: FTS-proxy-test1
                      operations:
                        - resource: /
                      quota: {}
                    - apiSource: FTS-proxy-test2
                      operations:
                        - resource: /
                      quota: {}
                  operationConfigType: proxy
                
                    
      parameters:
        - name: apiproduct-id
          in: path
          required: true
          schema:
            $ref: '#/components/parameters/apiproductId'
      responses:
        '200':
          description: Successful Operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIProductResponse'
              example:
                name: FTS-product-test
                displayName: FTS-product-test
                approvalType: auto
                attributes:
                  - name: access
                    value: public
                description: APM0000071 - dsfsf
                environments:
                  - dev
                quota: '4'
                quotaInterval: '6'
                quotaTimeUnit: hour
                createdAt: '1718136597439'
                lastModifiedAt: '1718136597439'
                operationGroup:
                  operationConfigs:
                    - apiSource: FTS-proxy-test1
                      operations:
                        - resource: /
                      quota: {}
                    - apiSource: FTS-proxy-test2
                      operations:
                        - resource: /
                      quota: {}
                  operationConfigType: proxy
                
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/400'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401'
        '403':
           description: Permission denied on resource
           content:
            application/json:
              schema:
                $ref: '#/components/schemas/403'
         
         
        '404':
          description: Resource Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/404'
        '409':
          description: Conflict
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/409' 

                
components:
  parameters:
    apiproductId:
      name: apiproduct-id
      in: path
      description: The name of the product
      required: true
      schema:
        type: string
    
  schemas:
    ApiProductList:
       type: object
       properties: 
        ApiProduct:
          type: array
          items:
            $ref: '#/components/schemas/APIProductResponse'  
      
    APIProductRequest:
      description: API product details.
      type: object
      properties: 
        name:
          description: >-
            Internal name of the API Product. Valid characters include: `A-Z0-9._\-$ %`.


            **Notes**:

            * The name is required when creating an API product. It cannot be edited when <a href="/docs/api-products/1/routes/organizations/%7Borg_name%7D/apiproducts/%7Bapiproduct_name%7D/put">updating the API product</a>.

            * API product names must be unique within your organization.

            * For Monetization organizations, API product names must use a unique sequence of characters, regardless of case. For example, if you create an API product named `APIProductA` and subsequently attempt to create a company named `apiproducta`, an error is thrown.

          type: string
        displayName:
          description: Name to be displayed in the UI or developer portal to developers registering for API access.
          type: string
        approvalType:
          description: >-
            Flag that specifies how API keys are approved to access the APIs defined by the API product.
            If set to `manual`, the consumer key is generated and returned in "pending" state. In this case, the API keys
            won't work until they have been explicitly approved. If set to `auto`, the consumer key is generated and returned in
            "approved" state and can be used immediately.


            **Note**: Typically, `auto` is used
            to provide access to free or trial API products that provide limited quota or capabilities.
          type: string
          enum:
          - auto
          - manual
        attributes:
          description: >-
            Array of attributes that may be used to extend the default API product profile with customer-specific metadata. With Edge for Public Cloud, you can specify a maximum of 18 attributes.
            Use this property to specify the access level of the API product as either `public`, `private`, or `internal`.
            Only products marked `public` are available to developers in the Apigee developer portal. For example, you can set a product to `internal` while it is
            in development and then change access to `public` when it is ready to release on the portal. API products marked as `private` do not appear on the
            portal but can be accessed by external developers.


            For monetization, you can use the attributes field to:

            * <a href="https://docs.apigee.com/api-platform/monetization/create-transaction-recording-policy#spectrpsuccessapi">Specify transaction success criteria</a>

            * <a href="https://docs.apigee.com/api-platform/monetization/create-transaction-recording-policy#spectrpcaapi">Specify custom attributes</a> on which you base rate plan charges</a>
          type: array
          items:
            $ref: '#/components/schemas/Attribute'  
        description:
          description: Description of the API product. Include key information about the API product.
          type: string   
        environments:
          description: >-
            Comma-separated list of environment names to which the API product is bound. Requests to environments that are not listed are rejected.
            By specifying one or more environments, you can bind the resources listed in the API product to a specific environment,
            preventing developers from accessing those resources through API proxies deployed in another environment.
            This setting is used, for example, to prevent resources associated with API proxies in `prod` from being accessed by API proxies deployed in `test`.
          type: array
          items:
            description: Environment.
            type: string
        quota:
          description: >-
            Number of request messages permitted per app by this API product for the specified `quotaInterval` and `quotaTimeUnit`.
            For example, a `quota` of 50, for a `quotaInterval` of 12 and a `quotaTimeUnit` of hours means 50 requests are allowed every 12 hours.
          type: string
        quotaInterval:
          description: >-
            Time interval over which the number of request messages is calculated.
          type: string
        quotaTimeUnit:
          description: >-
           Time unit defined for the `quotaInterval`.
          type: string
          enum:
          - minute
          - hour
          - day
          - month
        createdAt:
          description: Output only. Creation date specified as milliseconds since epoch.
          type: integer
          readOnly: true 
        lastModifiedAt:
          description: Output only. Last modified date specified as milliseconds since epoch.
          type: integer
          readOnly: true  
        operationGroup:
          description: >-
           Configuration used to group Apigee proxies or remote services with resources, method types, and quotas. The resource refers to the resource URI (excluding the base path). With this grouping, the API product creator is able to fine-tune and give precise control over which REST methods have access to specific resources and how many calls can be made (using the quota setting).

          type: object
          properties : 
            operationConfigs : 
              description: >-
                Configuration 
              type: array
              items:
               $ref: '#/components/schemas/OperationConfigs'
            operationConfigType:
              description: Name of attribute.
              type: string          
     
    APIProductResponse:
      description: API product details.
      type: object
      properties: 
        name:
          description: >-
            Internal name of the API Product. Valid characters include: `A-Z0-9._\-$ %`.


            **Notes**:

            * The name is required when creating an API product. It cannot be edited when <a href="/docs/api-products/1/routes/organizations/%7Borg_name%7D/apiproducts/%7Bapiproduct_name%7D/put">updating the API product</a>.

            * API product names must be unique within your organization.

            * For Monetization organizations, API product names must use a unique sequence of characters, regardless of case. For example, if you create an API product named `APIProductA` and subsequently attempt to create a company named `apiproducta`, an error is thrown.

          type: string
        displayName:
          description: Name to be displayed in the UI or developer portal to developers registering for API access.
          type: string
        approvalType:
          description: >-
            Flag that specifies how API keys are approved to access the APIs defined by the API product.
            If set to `manual`, the consumer key is generated and returned in "pending" state. In this case, the API keys
            won't work until they have been explicitly approved. If set to `auto`, the consumer key is generated and returned in
            "approved" state and can be used immediately.


            **Note**: Typically, `auto` is used
            to provide access to free or trial API products that provide limited quota or capabilities.
          type: string
          enum:
          - auto
          - manual
        attributes:
          description: >-
            Array of attributes that may be used to extend the default API product profile with customer-specific metadata. With Edge for Public Cloud, you can specify a maximum of 18 attributes.
            Use this property to specify the access level of the API product as either `public`, `private`, or `internal`.
            Only products marked `public` are available to developers in the Apigee developer portal. For example, you can set a product to `internal` while it is
            in development and then change access to `public` when it is ready to release on the portal. API products marked as `private` do not appear on the
            portal but can be accessed by external developers.


            For monetization, you can use the attributes field to:

            * <a href="https://docs.apigee.com/api-platform/monetization/create-transaction-recording-policy#spectrpsuccessapi">Specify transaction success criteria</a>

            * <a href="https://docs.apigee.com/api-platform/monetization/create-transaction-recording-policy#spectrpcaapi">Specify custom attributes</a> on which you base rate plan charges</a>
          type: array
          items:
            $ref: '#/components/schemas/Attribute'  
        description:
          description: Description of the API product. Include key information about the API product.
          type: string   
        environments:
          description: >-
            Comma-separated list of environment names to which the API product is bound. Requests to environments that are not listed are rejected.
            By specifying one or more environments, you can bind the resources listed in the API product to a specific environment,
            preventing developers from accessing those resources through API proxies deployed in another environment.
            This setting is used, for example, to prevent resources associated with API proxies in `prod` from being accessed by API proxies deployed in `test`.
          type: array
          items:
            description: Environment.
            type: string
        quota:
          description: >-
            Number of request messages permitted per app by this API product for the specified `quotaInterval` and `quotaTimeUnit`.
            For example, a `quota` of 50, for a `quotaInterval` of 12 and a `quotaTimeUnit` of hours means 50 requests are allowed every 12 hours.
          type: string
        quotaInterval:
          description: >-
            Time interval over which the number of request messages is calculated.
          type: string
        quotaTimeUnit:
          description: >-
           Time unit defined for the `quotaInterval`.
          type: string
          enum:
          - minute
          - hour
          - day
          - month
        operationGroup:
          description: >-
           Configuration used to group Apigee proxies or remote services with resources, method types, and quotas. The resource refers to the resource URI (excluding the base path). With this grouping, the API product creator is able to fine-tune and give precise control over which REST methods have access to specific resources and how many calls can be made (using the quota setting).

          type: object
          properties : 
            operationConfigs : 
              description: >-
                Configuration 
              type: array
              items:
               $ref: '#/components/schemas/OperationConfigs'
            operationConfigType:
              description: Name of attribute.
              type: string            

        createdAt:
          description: Output only. Creation date specified as milliseconds since epoch.
          type: integer
          readOnly: true 
        lastModifiedAt:
          description: Output only. Last modified date specified as milliseconds since epoch.
          type: integer
          readOnly: true  
        
            
    OperationConfigs:
      properties:
        apiSource:
          description: Name of proxy.
          type: string
        operations:
          description: Value of attribute.
      
          type: array  
          items:
            $ref: '#/components/schemas/operations' 
        quota:
          description: >-
            quota
          type: array
          items:
            description: OAuth scope.
            type: string    
    operations:
       properties:
        resource:
          description: Name of operation.
          type: string  
    
    
    Attribute:
      description: API product attribute name and value.
      properties:
        name:
          description: Name of attribute.
          type: string
        value:
          description: Value of attribute.
          type: string      
  
    '400':
      type: object
      properties:
        error:
          type : object
          properties : 
            code : 
             type: integer
             example: 400
            message:
             type: string
             example: Bad Request
            errorDetails:
             type: string
             example: Invalid Request
    '401':
      type: object
      properties:
        error:
          type : object
          properties : 
            code : 
             type: integer
             example: 401
            message:
             type: string
             example: Request had invalid authentication credentials
            errorDetails:
             type: string
             example: Invalid Access Token. Fetch a new toke and try again. 
    '403':
      type: object
      properties:
        error:
          type : object
          properties : 
            code : 
             type: integer
             example: 403
            message:
             type: string
             example: Permission denied on resource
            errorDetails:
             type: string
             example: Permission denied to access the resource          
    '404':
      type: object
      properties:
        error:
          type : object
          properties : 
            code : 
             type: integer
             example: 404
            message:
              type: string
              example: Resource Not Found
            errorDetails:
              type: string
              example: Requested resource cannot be found
    '409':
      type: object
      properties:
        error:
          type : object
          properties : 
            code : 
             type: integer
             example: 409
            message:
              type: string
              example: Conflict
            errorDetails:
              type: string
              example: ApiProduct with this name already exists

  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: string
security:
  - bearerAuth: []
