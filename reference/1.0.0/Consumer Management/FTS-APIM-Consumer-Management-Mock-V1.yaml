openapi: 3.0.3
info:
  title: FTS-APIM-Consumer-Management-Mock-V1 - OpenAPI 3.0
  description: Consumer API registers consumers on API Gateway and the identity provider
    that is used by the API Gateway (Ping etc..). After they are registered,
    consumers register their apps,
     choose the APIs they want to use, and receive the unique API credentials (consumer keys and secrets) needed to access the APIs.
  contact:
    name: FTS APIM Support
    email: DL-NA-APIM@fiserv.com     
  version: 1.0.0
servers:
  - url: https://connect-uat.fiservapis.com/fts/apim/consumer-management/mock/v1
    description: UAT server for test purposes
paths:
  /consumers:
    post:
      tags:
        - Consumer
      x-proxy-name: Consumer
      x-group-name: Create Consumer
      summary: Create consumer
      description: Creates a profile for a consumer in an organization and creates the
        associated organization of the consumer as domain in Ping. After the
        Consumer is created, they can register an app and receive the
        credentials.The Consumer is always created with a status of `active`. To
        set the status explicitly use the status param of the request 
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConsumerRequest'
            example:
              firstName: Mike
              lastName: John
              userName: mike.john
              email: mike.john@fiserv.com
              billingType: POSTPAID
              company: fiserv
              category: 7129a342-d66d-4b2b-986c-f44f02016a62 ||
                5872ea0b-240c-43e4-b258-04490fddeda6 ||
                22e853fd-78a8-4252-84fa-47ec5bd6f638
              phone: "1234567890"
              status: active
              legalName: mike john
              address:
                address1: Address
                city: Atlanta
                state: GA
                zip: "30004"
                country: USA
              attributes:
              - name: IDP
                value: apigee || apigee-ping
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConsumerResponse'
              example:
                apps: []
                email: mike.john@fiserv.com
                consumerId: e3f13637-6609-41d1-a70f-fe15822db1a0
                firstName: Mike
                lastName: John
                userName: mike.john
                organizationName: prj-fisv-n-apigeee4aa22a1
                status: active
                attributes:
                  - name: MINT_DEVELOPER_ADDRESS
                    value: {"address1":"Address","city":"Atlanta","state":"GA","zip":"30004","country":"USA"}
                  - name: MINT_BILLING_TYPE
                    value: POSTPAID
                  - name: COMPANY
                    value: fiserv
                  - name: MINT_DEVELOPER_CATEGORY
                    value: 7129a342-d66d-4b2b-986c-f44f02016a62
                  - name: MINT_DEVELOPER_PHONE
                    value: '1234567890'
                  - name: MINT_DEVELOPER_LEGAL_NAME
                    value: Mike John
                  - name: COMPANY_ID
                    value: "{\"APIM\":\"D7mq9m3m0\"}"
                  - name: IDP
                    value: apigee-ping
                createdAt: 1672119285892
                lastModifiedAt: 1672119285892
        '400':
          description: Bad Request
          content:
            application/json:
              example:
                code: 400
                message: Missing required params
                errorDetails: Bad Request
        '401':
          description: UnAuthorized
          content:
            application/json:
              example:
                code: 401
                message: Invalid Credentials
                errorDetials: UnAuthorized 
        '404':
          description: Not Found
          content:
            application/json:
              example:
                code: 404
                message: Resource not found
                errorDetials: Not Found
                
        '500':
          description: Internal Server Error
          content:
            application/json:
              example:
                code: 500
                message: Reason for internal server error
                errorDetials: Internal Server error
    get:
      tags:
        - Consumer
      x-proxy-name: Consumer
      x-group-name: List Consumers
      summary: Get list of consumer profile
      description: Get list of consumer profile from APIGEE
      parameters:
        - name: expand
          in: query
          required: false
          schema:
            $ref: '#/components/parameters/expand'
        - name: startKey
          in: query
          required: false
          schema:
            $ref: '#/components/parameters/startKey'
        - name: count
          in: query
          required: false
          schema:
            $ref: '#/components/parameters/count'  
        - name: ids
          in: query
          required: false
          schema:
            $ref: '#/components/parameters/ids'  
        - name: app
          in: query
          required: false
          schema:
            $ref: '#/components/parameters/app'    
      responses:
        '200':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConsumerResponse'
              example:
                apps: []
                email: mike.john@fiserv.com
                consumerId: e3f13637-6609-41d1-a70f-fe15822db1a0
                firstName: Mike
                lastName: John
                userName: mike.john
                organizationName: prj_fisv_n_apigeee4aa22a1
                status: active
                attributes:
                  - name: MINT_DEVELOPER_ADDRESS
                    value: {"address1":"Address","city":"Atlanta","state":"GA","zip":"30004","country":"USA"}
                  - name: MINT_BILLING_TYPE
                    value: POSTPAID
                  - name: COMPANY
                    value: fiserv
                  - name: MINT_DEVELOPER_CATEGORY
                    value: 7129a342-d66d-4b2b-986c-f44f02016a62
                  - name: MINT_DEVELOPER_PHONE
                    value: '1234567890'
                  - name: MINT_DEVELOPER_LEGAL_NAME
                    value: Mike John
                  - name: COMPANY_ID
                    value: "{\"APIM\":\"D7mq9m3m0\"}"
                  - name: IDP
                    value: apigee-ping
                createdAt: 1672119285892
                lastModifiedAt: 1672119285892
        '400':
          description: Bad Request
          content:
            application/json:
              example:
                code: 400
                message: Missing required params
                errorDetails: Bad Request
        '401':
          description: UnAuthorized
          content:
            application/json:
              example:
                code: 401
                message: Invalid Credentials
                errorDetials: UnAuthorized 
        '404':
          description: Not Found
          content:
            application/json:
              example:
                code: 404
                message: Resource not found
                errorDetials: Not Found
                
        '500':
          description: Internal Server Error
          content:
            application/json:
              example:
                code: 500
                message: Reason for internal server error
                errorDetials: Internal Server error        
  /consumers/{consumer-email}:
    get:
      tags:
        - Consumer
      x-proxy-name: Consumer
      x-group-name: Retrieve Consumer  
      summary: Get consumer profile
      description: Get consumer profile from APIGEE
      parameters:
        - name: consumer-email
          in: path
          required: true
          schema:
            $ref: '#/components/parameters/consumerEmail'
        - name: action
          in: query
          required: false
          schema:
            $ref: '#/components/parameters/action'    
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConsumerResponse'
              example:
                apps: []
                email: mike.john@fiserv.com
                consumerId: e3f13637-6609-41d1-a70f-fe15822db1a0
                firstName: Mike
                lastName: John
                userName: Mike.John
                organizationName: prj_fisv_n_apigeee4aa22a1
                status: active
                attributes:
                  - name: MINT_DEVELOPER_ADDRESS
                    value: {"address1":"Address","city":"Atlanta","state":"GA","zip":"30004","country":"USA"}
                  - name: MINT_BILLING_TYPE
                    value: POSTPAID
                  - name: COMPANY
                    value: fiserv
                  - name: MINT_DEVELOPER_CATEGORY
                    value: 7129a342-d66d-4b2b-986c-f44f02016a62
                  - name: MINT_DEVELOPER_PHONE
                    value: '1234567890'
                  - name: MINT_DEVELOPER_LEGAL_NAME
                    value: Mike John
                  - name: COMPANY_ID
                    value: "{\"APIM\":\"D7mq9m3m0\"}"
                  - name: IDP
                    value: apigee-ping
                createdAt: 1672119285892
                lastModifiedAt: 1672119285892
        '400':
          description: Bad Request
          content:
            application/json:
              example:
                code: 400
                message: Missing required params
                errorDetails: Bad Request
        '401':
          description: UnAuthorized
          content:
            application/json:
              example:
                code: 401
                message: Invalid Credentials
                errorDetials: UnAuthorized 
        '404':
          description: Not Found
          content:
            application/json:
              example:
                code: 404
                message: Resource not found
                errorDetials: Not Found
                
        '500':
          description: Internal Server Error
          content:
            application/json:
              example:
                code: 500
                message: Reason for internal server error
                errorDetials: Internal Server error
    put:
      tags:
        - Consumer
      x-proxy-name: Consumer
      x-group-name: Update Consumer   
      summary: Update consumer profile
      description: Update consumer profile in APIGEE
      parameters:
        - name: consumer-email
          in: path
          required: true
          schema:
            $ref: '#/components/parameters/consumerEmail'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConsumerRequest'
            example:
              firstName: Mike
              lastName: John
              userName: Mike.John
              email: mike.john@fiserv.com
              billingType: POSTPAID
              company: fiserv
              category: 7129a342-d66d-4b2b-986c-f44f02016a62 ||
                5872ea0b-240c-43e4-b258-04490fddeda6 ||
                22e853fd-78a8-4252-84fa-47ec5bd6f638
              phone: 1234567890
              status: active
              legalName: Mike John
              address:
                address1: Address
                city: Atlanta
                state: GA
                zip: 30004
                country: USA
              attributes:
              - name: IDP
                value: apigee || apigee-ping
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConsumerResponse'
              example:
                apps: []
                email: mike.john@fiserv.com
                consumerId: e3f13637-6609-41d1-a70f-fe15822db1a0
                firstName: Mike
                lastName: John
                userName: mike.john
                organizationName: prj_fisv_n_apigeee4aa22a1
                status: active
                attributes:
                  - name: MINT_DEVELOPER_ADDRESS
                    value: {"address1":"Address","city":"Atlanta","state":"GA","zip":"30004","country":"USA"}
                  - name: MINT_BILLING_TYPE
                    value: POSTPAID
                  - name: COMPANY
                    value: fiserv
                  - name: MINT_DEVELOPER_CATEGORY
                    value: 7129a342-d66d-4b2b-986c-f44f02016a62
                  - name: MINT_DEVELOPER_PHONE
                    value: '1234567890'
                  - name: MINT_DEVELOPER_LEGAL_NAME
                    value: Mike John
                  - name: COMPANY_ID
                    value: "{\"APIM\":\"D7mq9m3m0\"}"
                  - name: IDP
                    value: "apigee"
                createdAt: 1672119285892
                lastModifiedAt: 1672119285892
        '400':
          description: Bad Request
          content:
            application/json:
              example:
                code: 400
                message: Missing required params
                errorDetails: Bad Request
        '401':
          description: UnAuthorized
          content:
            application/json:
              example:
                code: 401
                message: Invalid Credentials
                errorDetials: UnAuthorized 
        '404':
          description: Not Found
          content:
            application/json:
              example:
                code: 404
                message: Resource not found
                errorDetials: Not Found
        '500':
          description: Internal Server Error
          content:
            application/json:
              example:
                code: 500
                message: Reason for internal server error
                errorDetials: Internal Server error            
    post:
      tags:
        - Consumer
      x-proxy-name: Consumer
      x-group-name: Set Consumer Status
      summary: Set consumer status
      description: Sets a consumer's status to `active` or `inactive` for a specific
        organization. Run this API for each organization where you want to
        change the Consumer's status.
      operationId: setConsumertatus
      parameters:
        - name: consumer-email
          in: path
          required: true
          schema:
            $ref: '#/components/parameters/consumerEmail'
        - name: action
          in: query
          required: true
          schema:
             $ref: '#/components/parameters/action'
      responses:
        '204':
          description: No Content
        '400':
          description: Bad Request
          content:
            application/json:
              example:
                code: 400
                message: Missing required params
                errorDetails: Bad Request
        '401':
          description: UnAuthorized
          content:
            application/json:
              example:
                code: 401
                message: Invalid Credentials
                errorDetials: UnAuthorized 
        '404':
          description: Not Found
          content:
            application/json:
              example:
                code: 404
                message: Resource not found
                errorDetials: Not Found
                
        '500':
          description: Internal Server Error
          content:
            application/json:
              example:
                code: 500
                message: Reason for internal server error
                errorDetials: Internal Server error
  /consumers/{consumer-email}/apps:
    get:
      tags:
        - Apps
      x-proxy-name: Consumer Apps
      x-group-name: Retrieve Consumer Apps  
      summary: Lists all apps
      description: Lists all apps created by a consumer in an organization
      parameters:
        - name: consumer-email
          in: path
          required: true
          schema:
            $ref: '#/components/parameters/consumerEmail'
        - name: expand
          in: query
          required: false
          schema:
            $ref: '#/components/parameters/expand'
        - name: attributename
          in: query
          required: false
          schema:    
            $ref: '#/components/parameters/attributename'
        - name: attributevalue
          in: query
          required: false
          schema:   
            $ref: '#/components/parameters/attributevalue'
        - name: shallowExpand
          in: query
          required: false
          schema:     
            $ref: '#/components/parameters/shallowExpand'
        - name: startKey
          in: query
          required: false
          schema:
            $ref: '#/components/parameters/startKey'
        - name: count
          in: query
          required: false
          schema:
            $ref: '#/components/parameters/count'    
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConsumerAppsListResponse'
              example:
                - APIM-BU-T46673
                - APIM-APP-T9009
                - APIM-Banking-T2
        '400':
          description: Bad Request
          content:
            application/json:
              example:
                code: 400
                message: Missing required params
                errorDetails: Bad Request
        '401':
          description: UnAuthorized
          content:
            application/json:
              example:
                code: 401
                message: Invalid Credentials
                errorDetials: UnAuthorized 
        '404':
          description: Not Found
          content:
            application/json:
              example:
                code: 404
                message: Resource not found
                errorDetials: Not Found
        '500':
          description: Internal Server Error
          content:
            application/json:
              example:
                code: 500
                message: Reason for internal server error
                errorDetials: Internal Server error
    post:
      tags:
        - Apps
      x-proxy-name: Consumer Apps
      x-group-name: Create Consumer App   
      summary: Creates an app associated with a Consumer
      description: Creates an app associated with a Consumer, associates the app with an
        API product, Creates a service account under the domainID in PingFed
      parameters:
        - name: consumer-email
          in: path
          required: true
          schema:
            $ref: '#/components/parameters/consumerEmail'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConsumerAppRequest'
            example:
              apiProducts:
                - FTS-APIM-WRAPPER
              vendorId: "123"
              applicationId: "456"
              applicationName: APIM
              channel: online
              name: FTS-APP
              displayName: FTS-APP
              publicKeyDPoP: "-----BEGIN PUBLIC KEY-----\nMIICIjANBgkqhkiG9w0BAQEFAAOCAg8AMIICCgKCAgEAyjvdsKlfz2uxa9RvpE+K\nPTVBkDUUSwPwn0QfOJTJdDRDUkipXYwGNDD9RlmkHQB1WxBAKM9bKPk35lMVE2bR\nwqep8l92ayeH31S53xBV+ERwOIYbfprTfI49Fnevett3x/WMS/4u7NNzGpbWSh8Z\nTTwgX4D8g45SBJYZgaSNWrJeUVMiPMv1MqUFKobPzGM4YSNrOqn0IjplmV3glVlQ\nSh1q5IOjRzbCNoN9vLLeTM9Kp5yomjve7gsyrx8gZc7xCgx2QmLvkl+vmm6rkf0L\nbDsaPwKA8vRE7Pr99SnsxK+Ckm+JCHDFxkyDv+hS92wHUCim79FW\nZiDKUl4ATg532TUT6eGGjYxpcf0g6Nx5g81oXZK3t1/dD0kFyldOkYUz86BlDm/S\nIHsiO8ew2gicGh6wzXTmmfUxJT6IOtNs5sMjWfKcmAyz0h+l88dkczob2o7l9Ob+\nyusSigIGEC6ENft86WZUY74Q9qNdZFwZhy7v1Vtr958OtwlY1LojdfyRmBReG+IP\nv3STCenUUDeMrqegtI1sHL1HzhY34GPMaQmDxoBEtueWXmFrwjqFEixVKYGErxJK\nRrA5wB1wz6UmnEf6mRibQ+5hdEjqfQ+YyaLlHGm1fhh4i69iNRWw6S+4zo7PlWAU\nzN5djqNkkAYfpJ5vW0DlWXUCAwEAAQ==\n-----END PUBLIC KEY-----"
              consumerKey: "3a54028e361ec4ea19692f08dfb7075d44acb69f"
              consumerSecret: "2b07ff563c6d8846f07704e7ce1dd7006dee1bc8"
              keyExpiresIn: "864000000"
              attributes:
              - name: BUSINESS_UNIT
                value: Banking Hub
              - name: IDP
                value: apigee
              - name: DEV_STUDIO_WORKSPACE_ID
                value: 9c0fbee3-4b3f-422a-981e-9690111a69bd
              - name: TOKEN_TYPE
                value: JWT
              - name: ADMIN_EMAIL
                value: mike.john@fiserv.com
              - name: PARTNER_NAME
                value: partnername
              - name: PARTNER_DUNS_NUMBER
                value: "012345678"  
      responses:
        '201':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConsumerAppResponse'
              example:
                appId: b608c3d6-7a67-4b70-b79b-a2bae9f26236
                attributes:
                  - name: DisplayName
                    value: FTS-Test-APP
                  - name: BUSINESS_UNIT
                    value: Banking Hub
                  - name: IDP
                    value: apigee
                  - name: dpop-enabled
                    value: "true"
                  - name: DEV_STUDIO_WORKSPACE_ID
                    value: 9c0fbee3-4b3f-422a-981e-9690111a69bd
                  - name: TOKEN_TYPE
                    value: JWT
                  - name: ADMIN_EMAIL
                    value: mike.john@fiserv.com
                  - name: PARTNER_NAME
                    value: partnername
                  - name: PARTNER_DUNS_NUMBER
                    value: "012345678"
                  - name: dpop-enabled
                    value: true   
                createdAt: 1672122288729
                credentials:
                  - apiProducts:
                      - apiproduct: FTS-APIM-WRAPPER
                        status: approved
                    attributes: []
                    consumerKey: <ConsumerKey>
                    consumerSecret: <ConsumerSecret>
                    expiresAt: -1
                    issuedAt: 1672122288973
                    scopes: []
                    status: approved
                consumerId: 8b6b7355-17fd-4475-a4c9-c7c39ee77bf6
                lastModifiedAt: 1672122288729
                name: FTS-Test-APP
                scopes: []
                status: approved
        '400':
          description: Bad Request
          content:
            application/json:
              example:
                code: 400
                message: Missing required params
                errorDetails: Bad Request
        '401':
          description: UnAuthorized
          content:
            application/json:
              example:
                code: 401
                message: Invalid Credentials
                errorDetials: UnAuthorized 
        '404':
          description: Not Found
          content:
            application/json:
              example:
                code: 404
                message: Resource not found
                errorDetials: Not Found
        '500':
          description: Internal Server Error
          content:
            application/json:
              example:
                code: 500
                message: Reason for internal server error
                errorDetials: Internal Server error
  /consumers/{consumer-email}/apps/{app-name}:
    put:
      tags:
        - Apps
      x-proxy-name: Consumer Apps
      x-group-name: Update Consumer App   
      summary: Creates an app associated with a Consumer
      description: Creates an app associated with a Consumer, associates the app with an
        API product, Creates a service account under the domainID in PingFed
      parameters:
        - name: consumer-email
          in: path
          required: true
          schema:
            $ref: '#/components/parameters/consumerEmail'
        - name: app-name
          in: path
          required: true
          schema:
            $ref: '#/components/parameters/appName'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConsumerAppRequest'
            example:
              apiproducts:
                - FTS-APIM-WRAPPER
              vendorId: "123"
              applicationId: "456"
              applicationName: APIM
              channel: online
              name: FTS-APP
              displayName: FTS-APP
              publicKeyDPoP: "-----BEGIN PUBLIC KEY-----\nMIICIjANBgkqhkiG9w0BAQEFAAOCAg8AMIICCgKCAgEAyjvdsKlfz2uxa9RvpE+K\nPTVBkDUUSwPwn0QfOJTJdDRDUkipXYwGNDD9RlmkHQB1WxBAKM9bKPk35lMVE2bR\nwqep8l92ayeH31S53xBV+ERwOIYbfprTfI49Fnevett3x/WMS/4u7NNzGpbWSh8Z\nTTwgX4D8g45SBJYZgaSNWrJeUVMiPPzGM4YSNrOqn0IjplmV3glVlQ\nSh1q5IOjRzbCNoN9vLLeTM9Kp5yomjve7gsyrx8gZc7xCgx2QmLvkl+vmm6rkf0L\nbDsaPwKA8vRE7Pr99SnsxK+Ckm+FnVcgQGyUVmQJCHDFxkyDv+hS92wHUCim79FW\nZiDKUl4ATg532TUT6eGGjYxpcf0g6Nx5g81oXZK3t1/dD0kFyldOkYUz86BlDm/S\nIHsiO8ew2gicGh6wzXTmmfUxJT6IOtNs5sMjWfKcmAyz0h+l88dkczob2o7l9Ob+\nyusSigIGEC6ENft86WZUY74Q9qNdZFwZhy7v1Vtr958OtwlY1LojdfyRmBReG+IP\nv3STCenUUDeMrqegtI1sHL1HzhY34GPMaQmDxoBEtueWXmFrwjqFEixVKYGErxJK\nRrA5wB1wz6UmnEf6mRibQ+5hdEjqfQ+YyaLlHGm1fhh4i69iNRWw6S+4zo7PlWAU\nzN5djqNkkAYfpJ5vW0DlWXUCAwEAAQ==\n-----END PUBLIC KEY-----"
              attributes:
              - name: BUSINESS_UNIT
                value: Banking Hub
              - name: IDP
                value: apigee || apigee-ping
              - name: DEV_STUDIO_WORKSPACE_ID
                value: 9c0fbee3-4b3f-422a-981e-9690111a69bd
              - name: TOKEN_TYPE
                value: JWT
              - name: ADMIN_EMAIL
                value: mike.john@fiserv.com
              - name: PARTNER_NAME
                value: partnername
              - name: PARTNER_DUNS_NUMBER
                value: "012345678"  
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConsumerAppResponse'
              example:
                appId: b608c3d6-7a67-4b70-b79b-a2bae9f26236
                attributes:
                  - name: DisplayName
                    value: FTS-Test-APP
                  - name: BUSINESS_UNIT
                    value: "Banking Hub"
                  - name: IDP
                    value: "apigee"
                  - name: DEV_STUDIO_WORKSPACE_ID
                    value: "9c0fbee3-4b3f-422a-981e-9690111a69bd"
                  - name: TOKEN_TYPE
                    value: "JWT"
                  - name: dpop-enabled
                    value: "true"  
                createdAt: 1672122288729
                credentials:
                  - apiProducts:
                      - apiproduct: FTS-APIM-WRAPPER
                        status: approved
                    attributes: []
                    consumerKey: <ConsumerKey>
                    consumerSecret: <ConsumerSecret>
                    expiresAt: -1
                    issuedAt: 1672122288973
                    scopes: []
                    status: approved
                consumerId: 8b6b7355-17fd-4475-a4c9-c7c39ee77bf6
                lastModifiedAt: 1672122288729
                name: FTS-Test-APP
                scopes: []
                status: approved
        '400':
          description: Bad Request
          content:
            application/json:
              example:
                code: 400
                message: Missing required params
                errorDetails: Bad Request
        '401':
          description: UnAuthorized
          content:
            application/json:
              example:
                code: 401
                message: Invalid Credentials
                errorDetials: UnAuthorized 
        '404':
          description: Not Found
          content:
            application/json:
              example:
                code: 404
                message: Resource not found
                errorDetials: Not Found
                
        '500':
          description: Internal Server Error
          content:
            application/json:
              example:
                code: 500
                message: Reason for internal server error
                errorDetials: Internal Server error    
    post:
      tags: ["Apps"]
      x-proxy-name: Consumer Apps
      x-group-name: Update Consumer App Status 
      summary: Approve, revoke a developer app, or generate API key for consumer app
      description: >-
        Approves, revokes, or generates an API key for a consumer app. 
        
        
        To approve or revoke the API key for a consumer app, set `status` to `approve` or `revoke` in the request body. 
        
        
        **Note**: As a convenience, you can call the API with the `action` query parameter set to `approve` or `revoke` (with no request body) and set the `Content-type` header to `application/octet-stream`. In this case, the HTTP status code for success is: `204 No Content`
        
        
        To generate a new consumer key and consumer secret for the consumer app, pass the required details, such as API products, in the request body. Rather than replace an existing key, the API generates a new key. 
        
        
        For example, if you're using API key rotation, you can generate new keys with expiration times that overlap keys that will be out of rotation when they expire. You might also generate a new key/secret if the security of the original key/secret is compromised. After the new API key is generated, multiple key pairs will be associated with a single app. Each key pair has an independent status (revoked or approved) and an independent expiration time. Any non-expired, approved key can be used in an API call. You should revoke an API key that has been compromised.
        

        **Note**: You must include all current attribute and callback values in the payload; otherwise, the existing values are removed.
        
        
        If you want to set the consumer key and consumer secret rather than having Edge generate them randomly, see <a href="https://docs.apigee.com/api-platform/publish/import-existing-consumer-keys-and-secrets">Import existing consumer keys and secrets</a>. (However, that API does not let you set an expiration time.)
      operationId: 'approveRevokeGenerateAPIKey'
      parameters:
        - name: consumer-email
          in: path
          required: true
          schema:
            $ref: '#/components/parameters/consumerEmail'
        - name: app-name
          in: path
          required: true
          schema:
            $ref: '#/components/parameters/appName'
        - name: status
          in: query
          required: false
          schema:
            $ref: '#/components/parameters/status' 
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConsumerApp'
              example:
                appFamily: default
                appId: 123abc-456-def
                attributes:
                - name: ADMIN_EMAIL
                  value: admin@example.com
                - name: DisplayName
                  value: My App
                - name: Notes
                  value: Notes for consumer app
                - name: MINT_BILLING_TYPE
                  value: POSTPAID
                - name: BUSINESS_UNIT
                  value: Banking Hub
                - name: ADMIN_EMAIL
                  value: mike.john@fiserv.com
                - name: PARTNER_NAME
                  value: partnername
                - name: PARTNER_DUNS_NUMBER
                  value: "012345678" 
                callbackUrl: example.com
                createdAt: 1568312504191
                credentials:
                - apiProducts: 
                  - apiproduct: myproduct
                    status: approved
                  attributes: []
                  consumerKey: F91jQrfX6CKhyEheXFBL3gxxxxx
                  consumerSecret: TLbUJFyzOlLxxxx
                  expiresAt: -1
                  issuedAt: 1568312504682
                  scopes: []
                  status: approved
                consumerId: 1234-abcd
                lastModifiedAt: 1568313405903
                name: myapp
                scopes: []
                status: approved
        '400':
          description: Bad Request
          content:
            application/json:
              example:
                code: 400
                message: Missing required params
                errorDetails: Bad Request
        '401':
          description: UnAuthorized
          content:
            application/json:
              example:
                code: 401
                message: Invalid Credentials
                errorDetials: UnAuthorized 
        '404':
          description: Not Found
          content:
            application/json:
              example:
                code: 404
                message: Resource not found
                errorDetials: Not Found
                
        '500':
          description: Internal Server Error
          content:
            application/json:
              example:
                code: 500
                message: Reason for internal server error
                errorDetials: Internal Server error
      requestBody:
        description: Consumer app details.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConsumerApp'
              example:
                appFamily: default
                appId: 123abc-456-def
                attributes:
                - name: ADMIN_EMAIL
                  value: admin@example.com
                - name: DisplayName
                  value: 'My App'
                - name: Notes
                  value: 'Notes for consumer app'
                - name: MINT_BILLING_TYPE
                  value: POSTPAID
                callbackUrl: example.com
                createdAt: 1568312504191
                credentials:
                - apiProducts: 
                  - apiproduct: myproduct
                    status: approved
                  attributes: []
                  consumerKey: F91jQrfX6CKhyEheXFBL3gxxxxx
                  consumerSecret: TLbUJFyzOlLxxxx
                  expiresAt: -1
                  issuedAt: 1568312504682
                  scopes: []
                  status: approved
                consumerId: 1234-abcd
                lastModifiedAt: 1568313405903
                name: myapp
                scopes: []
                status: approved
    get:
      tags:
        - Apps
      x-proxy-name: Consumer Apps
      x-group-name: Retrieve Consumer App   
      summary: Gets the profile of a specific Consumer app.
      description: Gets the profile of a specific Consumer app in an organization
      parameters:
        - name: consumer-email
          in: path
          required: true
          schema:
            $ref: '#/components/parameters/consumerEmail'
        - name: app-name
          in: path
          required: true
          schema:
            $ref: '#/components/parameters/appName'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConsumerAppResponse'
              example:
                appId: b608c3d6-7a67-4b70-b79b-a2bae9f26236
                attributes:
                - name: ADMIN_EMAIL
                  value: admin@example.com
                - name: DisplayName
                  value: My App
                - name: Notes
                  value: Notes for consumer app
                - name: MINT_BILLING_TYPE
                  value: POSTPAID
                - name: BUSINESS_UNIT
                  value: Banking Hub
                - name: ADMIN_EMAIL
                  value: mike.john@fiserv.com
                - name: PARTNER_NAME
                  value: partnername
                - name: PARTNER_DUNS_NUMBER
                  value: "012345678"
                - name: dpop-enabled
                  value: true  
                createdAt: 1672122288729
                credentials:
                  - apiProducts:
                      - apiproduct: FTS-APIM-WRAPPER
                        status: approved
                    attributes: []
                    consumerKey: <ConsumerKey>
                    consumerSecret: <ConsumerSecret>
                    expiresAt: -1
                    issuedAt: 1672122288973
                    scopes: []
                    status: approved
                consumerId: 8b6b7355-17fd-4475-a4c9-c7c39ee77bf6
                lastModifiedAt: 1672122288729
                name: FTS-Test-APP
                scopes: []
                status: approved
        '400':
          description: Bad Request
          content:
            application/json:
              example:
                code: 400
                message: Missing required params
                errorDetails: Bad Request
        '401':
          description: UnAuthorized
          content:
            application/json:
              example:
                code: 401
                message: Invalid Credentials
                errorDetials: UnAuthorized 
        '404':
          description: Not Found
          content:
            application/json:
              example:
                code: 404
                message: Resource not found
                errorDetials: Not Found
                
        '500':
          description: Internal Server Error
          content:
            application/json:
              example:
                code: 500
                message: Reason for internal server error
                errorDetials: Internal Server error
components:
  parameters:
    shallowExpand:
      name: shallowExpand
      in: query
      description: Specifies whether to expand the results in shallow mode. Set to true to expand the results in shallow mode.
      required: false
      schema:
        type: boolean
    ids:
      name: ids
      in: query
      description: The consumer Ids returned as part of response
      required: false
      schema:
        type: string
    appName:
      name: app-name
      in: path
      description: The app name
      required: true
      schema:
        type: string
    app:
      name: app
      in: query
      description: The app name
      required: false
      schema:
        type: string    
    consumerEmail:
      name: consumer-email
      in: path
      description: The email Id of the consumer
      required: true
      schema:
        type: string
    status:
      in: query
      name: status
      required: false
      description: Status of the app. It could be either 'approved' or 'revoked'
      schema:
        type: string
        example: approved
    action:
      in: query
      name: action
      required: true
      schema:
        type: string
        example: active
      description: Status of Consumer. Set to `active` or `inactive`.
    All:
      in: query
      name: attributevalue
      required: false
      schema:
        type: boolean
    attributename:
      in: query
      name: attributename
      required: false
      schema:
        type: string
      description: Name of an attribute defined in the API product profile  on which you
        want to filter the list.
    attributevalue:
      in: query
      name: attributevalue
      required: false
      schema:
        type: string
      description: Value of the attribute.
    count:
      in: query
      name: count
      required: false
      schema:
        type: integer
      description: >-
        **Apigee for Public Cloud only**. Number of API products to return
        in the API call. The limit is 1000.
    count_apps:
      in: query
      name: count
      required: false
      schema:
        type: integer
      description: >-
        **Apigee for Public Cloud only**. Valid when `entity` is set to
        `apps`. Number of apps to return in the API call. The limit is 100.
    expand:
      in: query
      name: expand
      required: false
      schema:
        type: boolean
      description: >-
        Flag that specifies whether to view expanded details about each API
        product. Set to `true` to view expanded details. Defaults to `false`.
    startKey:
      in: query
      name: startKey
      required: false
      schema:
        type: string
      description: >-
        **Apigee for Public Cloud only**. Email address of the developer from which to start displaying the list of developers. For example, if you're
        returning 50 consumers at a time (using the count query parameter),
        you can view consumers 50-99 by entering the email address of the 50th consumer. The email address is case sensitive. Similarly the same parameter can be used for filtering the apps.
    query:
      in: query
      name: query
      required: false
      schema:
        type: string
      description: >-
        Set to `list` to list the entities specified by the `entity` query
        parameter.
    entity:
      in: query
      name: entity
      required: false
      schema:
        type: string
      description: >-
        Specify the type of entity for which you want to get a count or list, as
        defined by the `query` parameter. Valid values include: `keys`, `apps`,
        `Consumer`, or `companies`. With Apigee, the
        `Consumer` and `entity` types are not supported.    
  schemas:
    Address:
      type: object
      properties:
        address1:
          type: string
          description: Address
        city:
          type: string
          description: City.
        state:
          type: string
          description: State.
        zip:
          type: string
          description: Zip code.
        country:
          type: string
          description: Country.
    Attributes:
      description: API product attributes.
      properties:
        attribute:
          type: array
          items:
            $ref: '#/components/schemas/Attribute'
        mintAttribute:
          type: array
          items:
            $ref: '#/components/schemas/MintAttribute'
    Attribute:
      description: API product attribute name and value.
      properties:
        name:
          description: Name of attribute.
          type: string
        value:
          description: Value of attribute.
          type: string
    ConsumerAppRequest:
      type: object
      required:
        - apiproducts
        - name
        - displayName
      properties:
        apiproducts:
          type: array
          items:
            $ref: '#/components/schemas/Array'
          description: API product list
        consumerKey:
          type: string
          description: "Consumer key can be supplied along with consumer secret to set custom value on the app while creating"
        consumerSecret:
          type: string
          description: "Consumer secret can be supplied along with consumer key to set custom value on the app while creating"
        attributes:
          type: array
          items:
            type: object
            properties:
              name:
                type: string
              value:
                type: string
        vendorId:
          type: string
          description: >-
            Unique vendor identification number provided by fiserv to identify
            vendor
        applicationId:
          type: string
          description: >-
            Unique identification number for client application used to send the
            service request
        applicationName:
          type: string
          description: >-
            Name of the client application that is used to send the service
            request
        channel:
          type: string
          description: Name of the channel used by the client application
        publicKeyDPoP:
          type: string
          description: Public key to enable the DPoP security framework
        name:
          type: string
          example: Name of the app
          description: Name of the consumer app
        displayName:
          type: string
          description: displayName of the consumer
        keyExpiresIn:
          type: string
          description: For how long the credentials of the app will be valid from the time of app creation in milliseconds
    ConsumerAppResponse:
      description: Consumer app details.
      type: object
      required:
        - name
      properties:
        appFamily:
          description: Output only. Family of the app.
          type: string
        appId:
          description: Output only. ID of the app.
          type: string
        attributes:
          description: >-
            List of attributes used for customizing profile information or for
            app-specific processing. With Apigee, the
            custom attribute limit is 18. Note the folowing:


            * `DisplayName` is an attribute that provides the app name in the
             UI. This can be different from the name (unique ID) of the app.

            * `Notes` attribute lets you add notes about the Consumer app.

            * Any other arbitrary name/value pairs you create are included as
            custom attributes.
          type: array
          items:
            $ref: '#/components/schemas/Attribute'
        callbackUrl:
          description: Output only. ID of the app.
          type: string
        createdAt:
          format: int32
          description: Output only. Time the app was created in milliseconds since epoch.
          type: integer
        credentials:
          description: >-
            Output only. Set of credentials for the app. Credentials are API
            key/secret pairs associated with API products.
          type: array
          items:
            type: object
            properties:
              apiProducts:
                description: Name and status of API products associated with the app.
                type: array
                items:
                  type: object
                  $ref: '#/components/schemas/APIProductRef'
              attributes:
                description: List of attributes.
                type: array
                items:
                  $ref: '#/components/schemas/Attribute'
              consumerKey:
                description: Consumer API key.
                type: string
              consumerSecret:
                description: Consumer secret.
                type: string
              expiresAt:
                description: Time the credentials expire in milliseconds since epoch.
                format: int32
                type: integer
              issuedAt:
                format: int32
                description: Time the credentials were issued in milliseconds since epoch.
                type: integer
              scopes:
                description: OAuth scopes.
                type: array
                items:
                  type: string
              status:
                description: Status of the credentials.
                type: string
        consumerId:
          description: Output only. ID of the Consumer.
          type: string
        lastModifiedAt:
          format: int32
          description: Output only. Last modified time as milliseconds since epoch.
          type: integer
        name:
          description: >-
            Name of the Consumer app. Required when creating a Consumer app; not
            required when updating a Consumer app. 


            The name is used to uniquely identify the app for this organization
            and Consumer. Names must begin with an alphanumeric character and
            can contain letters, numbers, spaces, and the following characters:
            `. _ # - $ %`. While you can use spaces in the name, we recommend
            that you use camel case, underscores, or hyphens instead. Otherwise,
            you will have to URL-encode the app name when you need to include it
            in the URL of other Edge API calls. See the <a
            href="https://docs.apigee.com/api-platform/reference/naming-guidelines">naming
            restrictions</a>. 
          type: string
        scopes:
          description: >-
            Scopes to apply to the app. The specified scope names must already
            exist on the API product that you associate with the app.
          type: array
          items:
            type: string
        status:
          description: Status of the credential.
          type: string
    ConsumerAppsListResponse:
      type: array
      items:
        $ref: '#/components/schemas/Array'
    ConsumerResponse:
      type: object
      required:
        - email
        - firstName
        - lastName
        - userName
      properties:
        apps:
          type: array
          items:
            $ref: '#/components/schemas/Array'
          description: Apps assosicated to the Consumer
        email:
          type: string
          example: mike.john@fiserv.com
          description: Email address of the consumer
        consumerId:
          type: string
          example: 002ed387-8497-49ce-acd2-db141b6c55b7
        firstName:
          type: string
          example: Name
          description: First Name of the consumer
        lastName:
          type: string
          example: John
        userName:
          type: string
        organizationName:
          type: string
          example: prj_fisv_n_apigeee4aa22a1
          description: Name of the organization associated with the Consumer.
        status:
          type: string
          example: active
          description: Status of the Consumer
        attributes:
          type: array
          items:
            $ref: '#/components/schemas/Attributes'
          description: Attributes assosicated to the Consumer
        createdAt:
          type: string
          example: '1672119285892'
          description: The timestamp of the consumer onboarded
        lastModifiedAt:
          type: string
          example: '1672119285892'
          description: The timestamp of the last modified onboarded consumer
    ConsumerRequest:
      type: object
      required:
        - email
        - firstName
        - lastName
        - userName
        - company
        - address
        - category
        - phone
        - legalName
      properties:
        firstName:
          type: string
          example: Name
          description: First Name of consumer
        lastName:
          type: string
          example: John
          description: Last Name of consumer
        userName:
          type: string
          example: MikeJohn
          description: User Name of consumer
        email:
          type: string
          example: mike.john@fiserv.com
          description: Email address of the consumer
        billingType:
          type: string
          example: POSTPAID 
          description: Billing type. Defaulted to 'POSTPAID' if not provided.
        company:
          type: string
          description: Name of fintech(Company)
          example: fiserv
        category:
          type: string
          description: category that is used to differentiate the developer
            configurations
          example: 7129a342-d66d-4b2b-986c-f44f02016a62
        phone:
          type: string
          example: 904-333-9999
          description: phone no. If the client does not provide, Please default to the dummy value.
        status:
          type: string
          example: active
          description: Status of consumer
        legalName:
          type: string
          example: AP
          description: Legal Name of Consumer
        address:
          type: object
          description: The address of the consumer. If not provided please put the default value mentioned in specification file.
          $ref: '#/components/schemas/Address'
        attributes:
          type: array
          items:
            $ref: '#/components/schemas/Attributes'
          description: Attributes assosicated to the Consumer  
    Array:
      type: string
      example: test
    MintAttribute:
      type: object
      properties:
        name:
          type: string
          example: ADMIN_email
        value:
          type: string
          example: ap@fiser.com
    ConsumerApp:
      description: Consumer app details.
      type: object
      required:
      - name
      properties:
        appFamily:
          description: Output only. App family.
          type: string
        apiProducts:
          description: List of API products to which the app is associated (when creating or updating an app). The name of the API product is the name returned when you <a href="/docs/api-products/1/routes/organizations/%7Borg_name%7D/apiproducts/get">list API products</a>. For example, if the Display Name of the API product in the UI is `Premium API Product`, then the name is `premium-api-product` (all lowercase with spaces replaced by hyphens). You can add API products later when you <a href="/docs/developer-apps/1/routes/organizations/%7Borg_name%7D/developers/%7Bdeveloper_email%7D/apps/%7Bapp_name%7D/put">update the developer app</a>. Existing API products are listed in the `credentials` array.
          type: array
          items:
            type: string
        appId:
          description: Output only. ID of the app.
          type: string
        attributes:
          description: >-
            List of attributes used for customizing profile information or for app-specific processing. With Apigee , the custom attribute limit is 18. Note the folowing:
            
            
            * `DisplayName` is an attribute that provides the app name in the UI. This can be different from the name (unique ID) of the app.
            
            * `Notes` attribute lets you add notes about the consumer app.
            
            * Any other arbitrary name/value pairs you create are included as custom attributes.
          type: array
          items:
            $ref: '#/components/schemas/Attribute'
        callbackUrl:
          description: >-
            Callback URL used by OAuth 2.0 authorization servers to communicate authorization codes back to apps. See the OAuth 2.0 documentation for more details.
          type: string
        createdAt:
          format: int32
          description: Output only. Time the app was created in milliseconds since epoch.
          type: integer
        credentials:
          description: >-
            Output only. Set of credentials for the app. Credentials are API key/secret pairs associated with API products.
          type: array
          items:
            type: object
            properties:
              apiProducts:
                description: Name and status of API products associated with the app.
                type: array
                items:
                  type: object
                  $ref: '#/components/schemas/APIProductRef'
              attributes:
                description: List of attributes.
                type: array
                items:
                  $ref: '#/components/schemas/Attribute'
              consumerKey:
                description: Consumer API key.
                type: string
              consumerSecret:
                description: Consumer secret.
                type: string
              expiresAt:
                description: Time the credentials expire in milliseconds since epoch.
                format: int32
                type: integer
              issuedAt:
                format: int32
                description: Time the credentials were issued in milliseconds since epoch.
                type: integer
              scopes:
                description: OAuth scopes.
                type: array
                items:
                  type: string
              status:
                description: Status of the credentials.
                type: string
        consumerId:
          description: Output only. ID of the consumer.
          type: string
        keyExpiresIn: 
          type: integer
          format: int32
          description: Lifetime of the consumer key that will be generated for the consumer app, in milliseconds. The default value, `-1`, indicates an infinite validity period. Once set, the expiration can't be updated.
        lastModifiedAt:
          format: int32
          description: Output only. Last modified time as milliseconds since epoch.
          type: integer
        name:
          description: >-
            Name of the consumer app. Required when creating a consumer app; not required when updating a consumer app. 
            
            
            The name is used to uniquely identify the app for this organization and consumer. Names must begin with an alphanumeric character and can contain letters, numbers, spaces, and the following characters: `. _ # - $ %`. While you can use spaces in the name, we recommend that you use camel case, underscores, or hyphens instead. Otherwise, you will have to URL-encode the app name when you need to include it in the URL of other Edge API calls. See the <a href="https://docs.apigee.com/api-platform/reference/naming-guidelines">naming restrictions</a>. 
          type: string
        scopes:
          description: >-
            Scopes to apply to the app. The specified scope names must already exist on the API product that you associate with the app.
          type: array
          items:
            type: string
        status:
          description: Status of the credential.
          type: string
    APIProductRef:
      description: API product information.
      type: object
      properties:
        apiproduct:
          description: Name of API product.
          type: string
        status:
          description: Status of API product.
          type: string
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: string
security:
  - bearerAuth: []