openapi: 3.0.3
info:
  title: FTS-APIM-Rateplan-Management-V1 - OpenAPI 3.0
  description: |-
    This document provides information on Rate Plans
  contact:
    name: FTS APIM Support
    email: DL-NA-APIM@fiserv.com
  version: 0.0.1
servers:
  - url: https://connect-dev.fiservapis.com/fts/apim/rateplan-management/v1
    description: Dev server
  - url: https://connect-test.fiservapis.com/fts/apim/rateplan-management/v1
    description: Test server
  - url: https://connect-qa.fiservapis.com/fts/apim/rateplan-management/v1
    description: QA server for test purposes
  - url: https://connect-uat.fiservapis.com/fts/apim/rateplan-management/v1
    description: UAT server for test purposes
  - url: https://connect-cert.fiservapis.com/fts/apim/rateplan-management/v1
    description: Client certification server
  - url: https://connect.fiservapis.com/fts/apim/rateplan-management/v1
    description: Production server
tags:
  - name: Rate Plans
    description: API endpoints related to Rate Plans
paths:
  /apiproducts/{apiproduct-id}/rateplans/{rateplan-id}:
    get:
      tags:
        - Rate Plans
      summary: Get a Rate Plan
      description: Gets the details of a rate plan.
      operationId: getRatePlan
      parameters:
        - name: rateplan-id
          in: path
          description: Provide the email ID
          required: true
          schema:
            $ref: '#/components/parameters/rateplanId'
        - name: apiproduct-id
          in: path
          description: Api Product name
          required: true
          schema:
            $ref: '#/components/parameters/apiproductId'            
      responses:
        '200':
          description: Successful Operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Rate_Plan'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/400'
        '403':
          description: Permission denied on resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/403'
        '404':
          description: Resource Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/404'
        '409':
          description: Conflict
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/409'
       
    put:
      tags:
        - Rate Plans
      summary:  Update a Rateplan
      description: Updates an existing rate plan.
      operationId: updateRatePlan
      requestBody:
        description: Rate plan details.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Rate_Plan'
        required: true
      parameters:
        - name: rateplan-id
          in: path
          description: Provide the email ID
          required: true
          schema:
            $ref: '#/components/parameters/rateplanId'
        - name: apiproduct-id
          in: path
          description: Api Product name
          required: true
          schema:
            $ref: '#/components/parameters/apiproductId'  
      responses:
        '200':
          description: Successful Operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Rate_Plan'          
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/400'
        '403':
          description: Permission denied on resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/403'
        '404':
          description: Resource Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/404'
        '409':
          description: Conflict
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/409'
  /apiproducts/{apiproduct-id}/rateplans:
    get:
      tags:
        - Rate Plans
      summary: Get list of Rate Plans
      description: Lists all the rate plans for an API product.
      operationId: getRatePlanList
      parameters:
        - name: apiproduct-id
          in: path
          description: Api Product name
          required: true
          schema:
            $ref: '#/components/parameters/apiproductId'            
      responses:
        '200':
          description: Successful Operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Rate_Plan'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/400'
        '403':
          description: Permission denied on resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/403'
        '404':
          description: Resource Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/404'
        '409':
          description: Conflict
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/409'
    post:
      tags:
        - Rate Plans
      summary:  Create a Rateplan
      description: Create a rate plan that is associated with an API product in an organization.
      operationId: createRatePlan
      requestBody:
        description: Rate plan details.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Rate_Plan'
        required: true
      parameters:
        - name: apiproduct-id
          in: path
          description: Api Product name
          required: true
          schema:
            $ref: '#/components/parameters/apiproductId'  
      responses:
        '200':
          description: Successful Operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Rate_Plan'          
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/400'
        '403':
          description: Permission denied on resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/403'
        '404':
          description: Resource Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/404'
        '409':
          description: Conflict
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/409'
components:
  parameters:
    apiproductId:
      name: apiproduct-id
      in: path
      description: The name of the product
      required: true
      schema:
        type: string
    rateplanId:
      name: rateplan-id
      in: path
      description: The consumer rateplan-id
      required: true
      schema:
        type: string
  schemas:
    Balance_Adjust:
      type: object
      properties:
        adjustment:
          $ref: '#/components/schemas/Adjustment'
      xml:
        name: Balance_Adjust
    Adjustment:
      type: object
      properties:
        currencyCode:
          type: string
          example: USD
        units:
          type: integer
          format: int32
          example: 1
        nanos:
          type: integer
          format: int64
          example: 150000000
      xml:
        name: adjustment
    Balance_Credit:
      type: object
      properties:
        transactionAmount:
          $ref: '#/components/schemas/Adjustment'
        transactionId:
          type: string
          example: unique Transaction id string
      xml:
        name: Balance_Credit

    Rate_Plan:
      type: object
      properties:
        name:
          type: string
          example: MockRatePlan
        apiproduct:
          type: string
          example: MockApiProduct
        displayName: 
          type: string
          example: MockApiProduct
        description:
          type: string
          example: description of Rate plan
        billingPeriod:
          type: string
          example: BILLING_PERIOD_UNSPECIFIED || WEEKLY || MONTHLY
        paymentFundingModel:
          type: string
          example: PAYMENT_FUNDING_MODEL_UNSPECIFIED || PREPAID || POSTPAID
        currencyCode:
          $ref: '#/components/schemas/CurrencyCode' 
        setupFee:
          $ref: '#/components/schemas/Adjustment'  
        fixedRecurringFee:
          $ref: '#/components/schemas/Adjustment'
        fixedFeeFrequency:
          type: integer
          format: int32
          example: 1
        consumptionPricingType:
          type: string
          example: CONSUMPTION_PRICING_TYPE_UNSPECIFIED || FIXED_PER_UNIT || BANDED || TIERED || STAIRSTEP 
        consumptionPricingRates:
          type: array
          items:
            $ref: '#/components/schemas/ConsumptionPricingRates'
        revenueShareType:
          type: string
          example: REVENUE_SHARE_TYPE_UNSPECIFIED || FIXED || VOLUME_BANDED
        revenueShareRates:
          $ref: '#/components/schemas/RevenueShareRates'
        state:
          type: string
          example: STATE_UNSPECIFIED || DRAFT || PUBLISHED
        startTime:
          type: integer
          format: int64
          example: 1675340923449
        endTime:
          type: integer
          format: int64
          example: 1677781800000  
    ConsumptionPricingRates:
      type: object
      properties:
        start:
          type: integer
          format: int32
          example: 0
        end:
          type: integer
          format: int64
          example: 1000000        
        fee:
          $ref: '#/components/schemas/Adjustment'
      xml:
        name: metric
    RevenueShareRates:
      type: object
      properties:
        start:
          type: integer
          format: int32
          example: 0
        end:
          type: integer
          format: int64
          example: 1000000 
        sharePercentage:
          type: integer
          format: int32
          example: 21
      xml:
        name: RevenueShareRates
    CurrencyCode:
          type: string
          example: USD
    
    ViolationsArray:
      type: object
      properties:
        type:
          type: string
          example: 'developer.service.CreateFieldsAbsent'
        subject:
          type: string
          example: '[2002:a17:90a:a606::]:4005:sibdq15:9800:799909:108669782'
        description:
          type: string
          example: 'Following elements are required: Email, User Name, First Name, Last Name'    
          
    400:
      type: object
      properties:
        error:
          type: object  
          properties:
            code:
              type: integer
              example: 400
            message:
              type: string
              example: Invalid request. Please check your input parameters
            errorDetails:
              type: string
              example: Bad Request
    401:
      type: object
      properties:
        error:
          type: object  
          properties:
            code:
              type: integer
              example: 401
            message:
              type: string
              example: Authentication failed. Ensure valid credentials.
            errorDetails:
              type: string
              example: Unauthorized
          
    403:
      type: object
      properties:
        error:
          type: object  
          properties:
            code:
              type: integer
              example: 403
            message:
              type: string
              example: Access denied. Insufficient permissions.
            errorDetails:
              type: string
              example: Forbidden
    
    404:
      type: object
      properties:
        error:
          type: object  
          properties:
            code:
              type: integer
              example: 404
            message:
              type: string
              example: Resource not found. Verify the URL.
            errorDetails:
              type: string
              example: Not Found  
          
    409:
      type: object
      properties:
        error:
          type: object  
          properties:
            code:
              type: integer
              example: 409
            message:
              type: string
              example: Conflict with existing entity. Choose a different name or resolve the conflict
            errorDetails:
              type: string
              example: Conflict    
    

  requestBodies:
    Balance_Adjust:
      description: Adjust object that needs to be added
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Balance_Adjust'
        application/xml:
          schema:
            $ref: '#/components/schemas/Balance_Adjust'
    Balance_Credit:
      description: Credit object that needs to be added
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Balance_Credit'
        application/xml:
          schema:
            $ref: '#/components/schemas/Balance_Credit'
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: string
security:
  - bearerAuth: []
  