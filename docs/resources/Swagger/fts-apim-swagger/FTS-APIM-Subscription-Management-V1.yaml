openapi: 3.0.3
info:
  title: FTS-APIM-Subscription-Management-V1 - OpenAPI 3.0
  description: This document provides information on subscription management.
  contact:
    name: FTS APIM Support
    email: DL-NA-APIM@fiserv.com
  version: 1.0.0
servers:
  - url: https://connect-dev.fiservapis.com/fts/apim/subscription-management/v1
    description: Dev server
  - url: https://connect-test.fiservapis.com/fts/apim/subscription-management/v1
    description: Test server
  - url: https://connect-qa.fiservapis.com/fts/apim/subscription-management/v1
    description: QA server for test purposes
  - url: https://connect-uat.fiservapis.com/fts/apim/subscription-management/v1
    description: UAT server for test purposes
  - url: https://connect-cert.fiservapis.com/fts/apim/subscription-management/v1
    description: Client certification server
  - url: https://connect.fiservapis.com/fts/apim/subscription-management/v1
    description: Production server
tags:
  - name: Subscription
    description: API endpoints related to consumers subscriptions
paths:
  /consumers/{consumer-email}/subscriptions:
    post:
      tags:
        - Subscription
      summary: Creates a subscription to an API product.
      description: Creates a subscription to an API product.
      operationId: createConsumerSubscription
      requestBody:
        description: Subscription details.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SubscriptionRequest'
        required: true
      parameters:
        - name: consumer-email
          in: path
          required: true
          schema:
            $ref: '#/components/parameters/consumerEmail'
      responses:
        '201':
          description: Successful Operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateconsumerSubscriptionsResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/400'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401'
        '403':
           description: Permission denied on resource
           content:
            application/json:
              schema:
                $ref: '#/components/schemas/403'
         
         
        '404':
          description: Resource Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/404'
        '409':
          description: Conflict
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/409'
    get:
      tags:
        - Subscription
      summary: Lists all API product subscriptions for a consumer
      description: List all subscriptions for a consumer.
      operationId: retrieveConsumerSubscriptions
      parameters:
        - name: consumer-email
          in: path
          required: true
          schema:
            $ref: '#/components/parameters/consumerEmail'
      responses:
        '200':
          description: Successful Operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/consumerSubscriptionsResponse'
              example:
                    consumerSubscriptions:
                      - name: 6eabe050-bc13-4ed9-9e73-39ddfc0c3412
                        apiproduct: RX-Grafana-Mint-01-Banded-Product
                        startTime: '1700812189684'
                        createdAt: '1700812189684'
                        lastModifiedAt: '1715179693462'
                      - name: 6fdcef9b-6ef5-47cc-97a1-7d8714101f44
                        apiproduct: RX-Grafana-Mint-01-FixedPerUnit-Product
                        startTime: '1700812205216'
                        endTime: '1700812205216'
                        createdAt: '1700812205216'
                        lastModifiedAt: '1700812205216'
                      - name: 881bfaca-f6e3-49db-b1f3-1ceaa64aebc7
                        apiproduct: nc-mocktarget-mint-01
                        startTime: '1693312774006'
                        endTime: '1700812205216'
                        createdAt: '1693312774006'
                        lastModifiedAt: '1693312839619'
                      - name: 942878f2-51f0-4a4c-b6b2-a218296e158c
                        apiproduct: RX-Grafana-Mint-01-InitRecrFee-Product
                        startTime: '1700829900015'
                        createdAt: '1700829900015'
                        lastModifiedAt: '1700829900015'
                      - name: 98fca02b-b99d-4fca-9305-cedb904ddf6c
                        apiproduct: RX-Grafana-Mint-02-FixedPerUnit-Product
                        startTime: '1700835181865'
                        createdAt: '1700835181865'
                        lastModifiedAt: '1700835181865'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/400'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401'
        '403':
           description: Permission denied on resource
           content:
            application/json:
              schema:
                $ref: '#/components/schemas/403'
        '404':
          description: Resource Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/404'
        '409':
          description: Conflict
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/409'
  /consumers/{consumer-email}/subscriptions/{subscription-id}:expire:
    post:
      tags:
        - Subscription
      summary: Expires an API product subscription immediately.
      description: Expires an API product subscription immediately.
      operationId: expireConsumerSubscriptionById
      parameters:
        - name: consumer-email
          in: path
          required: true
          schema:
            $ref: '#/components/parameters/consumerEmail'
        - name: subscription-id
          in: path
          required: true
          schema:
            $ref: '#/components/parameters/subscriptionId'
      responses:
        '200':
          description: Successful Operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/consumerSubscriptionsExpireResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/400'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401'
        '403':
          description: Permission denied on resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/403'
         
          
        '404':
          description: Resource Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/404'
        '409':
          description: Conflict
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/409'
  /consumers/{consumer-email}/subscriptions/{subscription-id}:
    get:
      tags:
        - Subscription
      summary: Gets details for an API product subscription.
      description: Gets details for an API product subscription.
      operationId: retrieveConsumerSubscriptionById
      parameters:
        - name: consumer-email
          in: path
          required: true
          schema:
            $ref: '#/components/parameters/consumerEmail'
        - name: subscription-id
          in: path
          required: true
          schema:
            $ref: '#/components/parameters/subscriptionId'
      responses:
        '200':
          description: Successful Operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/consumerSubscriptionsResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/400'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401'
        '403':
          description: Permission denied on resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/403'
         
        '404':
          description: Resource Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/404'
        '409':
          description: Conflict
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/409'
components:
  parameters:
    consumerEmail:
      name: consumer-email
      in: path
      description: The email Id of the consumer
      required: true
      schema:
        type: string
    subscriptionId:
      name: subscription-id
      in: path
      description: The consumer subscription Id
      required: true
      schema:
        type: string
  schemas:
    '400':
      type: object
      properties:
        error:
          type : object
          properties : 
            code : 
             type: integer
             example: 400
            message:
             type: string
             example: Bad Request
            errorDetails:
             type: string
             example: Invalid Request
    '401':
      type: object
      properties:
        error:
          type : object
          properties : 
            code : 
             type: integer
             example: 401
            message:
             type: string
             example: Request had invalid authentication credentials
            errorDetails:
             type: string
             example: Invalid Access Token. Fetch a new toke and try again. 
    '403':
      type: object
      properties:
        error:
          type : object
          properties : 
            code : 
             type: integer
             example: 403
            message:
             type: string
             example: Permission denied on resource
            errorDetails:
             type: string
             example: Permission denied to access the resource          
    '404':
      type: object
      properties:
        error:
          type : object
          properties : 
            code : 
             type: integer
             example: 404
            message:
              type: string
              example: Resource Not Found
            errorDetails:
              type: string
              example: Requested resource cannot be found
    '409':
      type: object
      properties:
        error:
          type : object
          properties : 
            code : 
             type: integer
             example: 409
            message:
              type: string
              example: Conflict
            errorDetails:
              type: string
              example: Consumer email already exists
    consumerSubscriptionsResponse:
      type: object
      required:  
        - name
        - apiproduct
        - startTime
        - createdAt
        - lastModifiedAt
      properties:
        name:
          type: string
          description: Name of the API product subscription.
          example: d563babd-520b-41e0-aeda-c33f39fae468
        apiproduct:
          type: string
          description: >-
            Name of the API product for which the consumer is purchasing a
            subscription.
          example: RkPetstore25AprProduct
        startTime:
          type: string
          description: >-
            Time when the API product subscription starts in milliseconds since
            epoch.
          example: '1715098016906'
        endTime:
          type: string
          description: >-
            Time when the API product subscription ends in milliseconds since
            epoch.
          example: '1715179693462'  
        createdAt:
          type: string
          description: >-
            Time when the API product subscription was created in milliseconds
            since epoch.
          example: '1715098016906'
        lastModifiedAt:
          type: string
          description: >-
            Time when the API product subscription was last modified in
            milliseconds since epoch.
          example: '1715098016906'  
    CreateconsumerSubscriptionsResponse:
      type: object
      properties:
        name:
          type: string
          description: Name of the API product subscription.
          example: d563babd-520b-41e0-aeda-c33f39fae468
        apiproduct:
          type: string
          description: >-
            Name of the API product for which the consumer is purchasing a
            subscription.
          example: RkPetstore25AprProduct
        startTime:
          type: string
          description: >-
            Time when the API product subscription starts in milliseconds since
            epoch.
          example: '1715098016906'
        createdAt:
          type: string
          description: >-
            Time when the API product subscription was created in milliseconds
            since epoch.
          example: '1715098016906'
        lastModifiedAt:
          type: string
          description: >-
            Time when the API product subscription was last modified in
            milliseconds since epoch.
          example: '1715098016906'
    consumerSubscriptionsExpireResponse:
      type: object
      required:  
        - name
        - apiproduct
        - startTime
        - createdAt
        - endTime
        - lastModifiedAt
      properties:
        name:
          type: string
          description: Name of the API product subscription.
          example: 6eabe050-bc13-4ed9-9e73-39ddfc0c3412
        apiproduct:
          type: string
          description: >-
            Name of the API product for which the consumer is purchasing a
            subscription.
          example: RX-Grafana-Mint-01-Banded-Product
        startTime:
          type: string
          description: >-
            Time when the API product subscription starts in milliseconds since
            epoch.
          example: '1700812189684'
        endTime:
          type: string
          description: >-
            Time when the API product subscription ends in milliseconds since
            epoch.
          example: '1715179693462'
        createdAt:
          type: string
          description: >-
            Time when the API product subscription was created in milliseconds
            since epoch.
          example: '1700812189684'
        lastModifiedAt:
          type: string
          description: >-
            Time when the API product subscription was last modified in
            milliseconds since epoch.
          example: '1715179693462'
    SubscriptionRequest:
      description: Subscription Request Body
      required:
      - apiproduct
      type: object
      properties:
        apiproduct:
          type: string
          description: Name of the API product for which the consumer is purchasing a subscription.
          example: RkPetstore25AprProduct      
  requestBodies:
    SubscriptionRequest:
      description: Subscription Request Body
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/SubscriptionRequest'
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: string
security:
  - bearerAuth: []
